[package]
name = "cap-std-workspace"
version = "0.19.1-alpha.0"
description = "Capability-based version of the Rust standard library"
authors = [
    "Dan Gohman <dev@sunfishcode.online>",
    "Jakub Konka <kubkon@jakubkonka.com>",
]
license = "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT"
keywords = ["std", "api", "network", "file"]
categories = ["filesystem", "network-programming"]
repository = "https://github.com/bytecodealliance/cap-std"
edition = "2018"
publish = false

[build-dependencies]
rustc_version = "0.4.0"

[dev-dependencies]
async-std = { version = "1.10.0", features = ["attributes"] }
anyhow = "1.0.37"
cap-async-std = { path = "cap-async-std", version = "^0.19.1-alpha.0"}
cap-fs-ext = { path = "cap-fs-ext", version = "^0.19.1-alpha.0"}
cap-directories = { path = "cap-directories", version = "^0.19.1-alpha.0"}
cap-std = { path = "cap-std", version = "^0.19.1-alpha.0"}
cap-tempfile = { path = "cap-tempfile", version = "^0.19.1-alpha.0"}
rand = "0.8.1"
tempfile = "3.1.0"
camino = "1.0.5"

[target.'cfg(not(windows))'.dev-dependencies]
rsix = "0.23.0"

[target.'cfg(windows)'.dev-dependencies]
# nt_version uses internal Windows APIs, however we're only using it
# for testing here.
nt_version = "0.1.3"
winapi = "0.3.9"

[features]
default = []
fs_utf8 = [
    "cap-std/fs_utf8",
    "cap-fs-ext/fs_utf8",
    "cap-tempfile/fs_utf8",
]
async_std_fs_utf8 = [
    "cap-async-std/fs_utf8",
    "cap-fs-ext/async_std_fs_utf8"
]

[badges]
maintenance = { status = "actively-developed" }

[workspace]
members = [
  "cap-async-std",
  "cap-fs-ext",
  "cap-directories",
  "cap-primitives",
  "cap-rand",
  "cap-std",
  "cap-tempfile",
  "cap-time-ext",
  # Work around https://github.com/rust-lang/cargo/issues/8338.
  #"fuzz",
]
